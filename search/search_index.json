{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":"<p>Welcome to Tech Chronicles, a blog dedicated to exploring the world of technology, resilience, and the power of learning from failures. Here, we dive deep into the challenges faced by developers and enthusiasts across various tech domains, sharing their code tales, failures, and the valuable insights gained from their experiences.</p>"},{"location":"#our-mission","title":"Our Mission","text":"<p>At Tech Chronicles, our mission is to provide an open platform for individuals to reflect on their failures, celebrate their successes, and foster a supportive community of learners in the tech industry. We believe that failure is an integral part of the learning process, and by embracing setbacks and sharing our stories, we can inspire and empower others on their own tech journeys.</p>"},{"location":"#what-to-expect","title":"What to Expect","text":"<p>In this blog, you will find a diverse range of articles, tutorials, and personal accounts covering topics such as Python development, machine learning, web technologies, data science, and more. We highlight the ups and downs of projects, the bugs encountered along the way, and the discoveries that emerge from troubleshooting and problem-solving.</p>"},{"location":"#meet-the-authors","title":"Meet the Authors","text":"<p>At Tech Chronicles, we are a team of passionate developers and tech enthusiasts who believe in the power of sharing failures, discoveries, and learnings. Get to know our authors:</p>"},{"location":"#abir-hasan-munna","title":"Abir Hasan Munna","text":"<p>Abir Hasan Munna, the founder of Tech Chronicles, is a developer with experiance in using Python, FastAPI, Machine Learning, TensorFlow, OpenCV, PYQT5 and various other tech tools. With a strong dedication to learning from failures, Abir shares valuable insights and experiences through captivating code tales.</p>"},{"location":"#join-the-conversation","title":"Join the Conversation","text":"<p>We encourage you to be an active participant in the Tech Chronicles community. Engage with the articles by leaving comments, sharing your own experiences, and providing insights. Let's learn from one another and together strive for continuous improvement.</p> <p>Thank you for joining us on this journey of resilience, code tales, failures, and learnings in the ever-evolving world of technology!</p>"},{"location":"#contact-us","title":"Contact Us","text":"<p>Have a question or comment? We'd love to hear from you! Please reach out to us at  Chronicle_Dev</p>"},{"location":"Abir/FastAPI/first_one/","title":"FastAPI in minutes","text":""},{"location":"Abir/FastAPI/first_one/#what-is-fastapi","title":"What is FastAPI?","text":"<p>FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.</p> <p>The key features are:</p> <ul> <li>Fast: Very high performance, on par with NodeJS and Go (thanks to Starlette and Pydantic). One of the fastest Python frameworks available.</li> <li>Fast to code: Increase the speed to develop features by about 200% to 300%. *</li> <li>Fewer bugs: Reduce about 40% of human (developer) induced errors. *</li> <li>Intuitive: Great editor support. Completion everywhere. Less time debugging.</li> <li>Easy: Designed to be easy to use and learn. Less time reading docs.</li> <li>Short: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.</li> <li>Robust: Get production-ready code. With automatic interactive documentation.</li> <li> <p>Standards-based: Based on (and fully compatible with) the open standards for APIs: OpenAPI (previously known as Swagger) and JSON Schema.</p> </li> <li> <p>estimation based on tests on an internal development team, building production applications.</p> </li> </ul>"},{"location":"Abir/FastAPI/first_one/#requirements","title":"Requirements","text":"<p>FastAPI requires Python 3.6, 3.7, 3.8 or 3.9.</p>"},{"location":"Abir/FastAPI/first_one/#installation","title":"Installation","text":"<p>You can install FastAPI with pip:</p> <pre><code>$ pip install fastapi\n</code></pre>"},{"location":"Abir/FastAPI/first_one/#example","title":"Example","text":"<pre><code>from fastapi import FastAPI\napp = FastAPI()\n@app.get(\"/\")\nasync def root():\nreturn {\"message\": \"Hello World\"}\n</code></pre>"},{"location":"Abir/FastAPI/first_one/#user-guide","title":"User Guide","text":"<p>Check out the User Guide for more details.</p>"},{"location":"Abir/FastAPI/first_one/#interactive-api-docs","title":"Interactive API docs","text":"<p>Go to http://127.0.0.1:8000/docs in your browser to see the automatic interactive API documentation Swagger UI.</p> <p></p>"},{"location":"Abir/FastAPI/first_one/#interactive-api-docs-alternative","title":"Interactive API docs Alternative","text":"<p>Go to http://127.0.01:8000/redoc in your browser to see the automatic interactive API documentation ReDoc.</p> <p></p>"},{"location":"Abir/FastAPI/first_one/#so-what-are-we-getting-with-fastapi","title":"So what are we getting with FastAPI?","text":"<ul> <li>An easy to build API with Python</li> <li>A modern, asynchronous, Python 3.6+ web framework</li> <li>Automatic interactive API documentation</li> <li>Data validation</li> <li>Dependency injection</li> <li>Authentication</li> <li>Security</li> <li>CORS (Cross Origin Resource Sharing)</li> <li>GraphQL integration</li> <li>SQLAlchemy integration</li> <li>Docker and Kubernetes integration</li> <li>Testing utilities</li> <li>And many other features</li> </ul>"},{"location":"Abir/FastAPI/first_one/#lets-get-started-with-a-deep-dive-into-fastapi-next","title":"Let's get started! with a deep dive into FastAPI.  Next","text":""},{"location":"Abir/FastAPI/second_one/","title":"Step by ToDo Api with FastAPI","text":""}]}